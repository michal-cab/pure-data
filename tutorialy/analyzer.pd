#N canvas 1 67 791 535 10;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-spektrum 2048 float 0;
#X coords 0 300 2047 -40 257 70 1 0 0;
#X restore 103 202 graph;
#N canvas 469 349 558 569 fft 0;
#X obj 19 62 inlet~;
#X obj 59 215 inlet;
#X obj 19 92 rfft~;
#X obj 19 125 *~;
#X obj 50 125 *~;
#X obj 19 155 sqrt~;
#X obj 332 109 block~ 4096 1;
#X obj 19 181 biquad~ 0 0 0 0 1;
#X text 83 93 Fourier series;
#X text 88 146 magnitude;
#X text 86 131 calculate;
#X text 21 3 This subpatch computes the spectrum of the incoming signal
with a (rectangular windowed) FFT. FFTs aren't properly introduced
until much later.;
#X text 83 62 signal to analyze;
#X text 182 166 delay two samples;
#X text 181 182 for better graphing;
#X text 135 216 "bang" into this inlet to graph it;
#X obj 19 259 tabwrite~ \$0-spektrum;
#X connect 0 0 2 0;
#X connect 1 0 16 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 7 0 16 0;
#X restore 254 35 pd fft;
#N canvas 1 54 450 300 (subpatch) 0;
#X array \$0-vlna 256 float 0;
#X coords 0 1 255 -1 257 70 1 0 0;
#X restore 103 115 graph;
#X obj 116 -58 inlet~;
#X obj 116 32 tabwrite~ \$0-vlna;
#X obj 287 -59 inlet;
#X text 124 59 p≈ôevzato z E01.spectrum.pd;
#X obj 287 -33 metro 40;
#X obj 116 -31 z~;
#X obj 146 -32 limiter~;
#X obj 115 -7 *~;
#X obj 60 31 outlet~;
#X connect 3 0 8 0;
#X connect 3 0 9 0;
#X connect 5 0 7 0;
#X connect 7 0 4 0;
#X connect 7 0 1 1;
#X connect 8 0 10 0;
#X connect 9 0 10 1;
#X connect 10 0 4 0;
#X connect 10 0 1 0;
#X connect 10 0 11 0;
#X coords 0 -1 1 1 263 174 2 100 100;
